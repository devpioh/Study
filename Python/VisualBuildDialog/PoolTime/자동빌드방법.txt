자동 빌드 사용 방법

1, 자동 빌드 스크립트 파일 svn 경로 : http://10.101.56.241/Pooltime/Build/

- BuildConfig.py를 열어 필요한 정보 수정, ex)버전, 각종 경로
- 각 서벌(Dev,Alpha,Real)별, Configuration(Debug/Relase)별 스크립트와 별도로 모든 빌드를 한번에 구성하여 한꺼번에 할수 있는 빌드 스크립트도 추가 되었습니다. 필요에 맞게 정당한 스크립트 파일을 선택해서 실해하시면 됩니다.
ex) alpha 서버로 빌드하려면 이름에 alpha가 들어간 스크립트를 실행합니다. 스크립트 파일 이름에 DR이 붙은 파일은 디버그와 릴리즈 모두 빌드 한다는 뜻입니다. 

2, 빌드된 파일의 공유 폴더 경로(APK, IPA) : 10.101.56.242/PocketBuild/AOS, 10.101.56.242/PocketBuild/IOS

3, 빌드 스크립트를 실행 하기 위해 필요한 셋팅

- AOS : Python 최신 버전 설치, 방화벽에 파일 프린터 공유를 예외로 추가(공유폴더에 APK를 업로드 하기 위해)
- IOS : Python 설치, 로그인 시 공유폴더가 마운트 되어 있어야 함(빌드 머신에 필요한 셋팅 완료되었습니다)

4, 빌드 설정 파일 구성

	serverModes = ["DEV", "ALPHA", "REAL"]			// "DEV", "ALPHA", "REAL" 를 접속 서버로하는 빌드를 만듭니다. 알파와 리얼만 하고 싶으면 serverModes = ["ALPHA", "REAL"]로 설정합니다.
    profiles = ["development", "adhoc", "distribution"]		// IOS의 경우 사이닝 할 profile을 나타냅니다. "adhoc" 만 빌드하고 싶으면 profiles = ["adhoc"]으로 합니다.
    debugModes = ["DEV", "ALPHA", "REAL"]			// 디버그 모드로 빌드할 서버 모드를 선택합니다. 디버그 모드를 빌드하고 싶지 않으면 []으로 합니다.
    releaseModes = ["DEV", "ALPHA", "REAL"]			// 릴리즈 모드로 빌드할 서버 모드를 선택합니다. 릴리즈 모드를 빌드하고 싶지 않으면 []으로 합니다.
    adjustServerMode = ["REAL"]					// adjust 플러그인을 사용할 서버모드를 선택합니다.
    adjustBuildMode = ["DEBUG", "RELEASE"]			// adjust 플러그인을 사용할 빌드 모드(Debug/Release)를 선택합니다.
    gPrestoServerMode = ["REAL"]				// gpresto 플러그인을 사용할 서버모드를 선택합니다.
    gPrestoBuildMode = ["RELEASE"]				// gpresto 플러그인을 사용할 빌드 모드(Debug/Release)를 선택합니다.
    
    
    #version
    bundleVersion = "1.0.0.0"								// 번들 버전
    bundleVersionCode = "200"								// 번들 코드
    
    #unity executable path
    excutablePath = r"C:/Program Files/Unity561f1/Editor/Unity.exe"			// 유티티 실행 파일 경로
    #master svn path
    svnPath = r"D:/Work/PoolTime10"											// svn 최상위 소스 경로
    #svn project path
    svnProjectPath = svnPath + r"/SourcesNeoBilliards"						// svn 유니티 프로젝트 소스 경로
    
    sharedDrive = "\\\\10.101.56.242\\b-adshare"							// 공유폴더 드라이브 경로
    sharedDirectory = "\\PocketBuild\\AOS\\"								// 최종 apk,ipa의 공유폴더 경로
    
    sharedDriveUserName = r"none"											// 공유 폴더로 접속하기 위한 유저네임
    sharedDrivePassword = r"none"											// 공유 폴더로 접속하기 위한 비밀번호, sharedDriveUserName, sharedDrivePassword가 하나라도 "none"일 경우, 
																			// 빌드 중에 계정/비번을 물어보거나 이미 한번으라도 로그인 된 적이 있으면 물어 보지 않고 자동으로 로그인 될 것입니다.


5, 빌드 시 유의 사항

5.1 AOS

- unity 프로그램이 실행 되어 있으면 안됩니다. 유니티 커맨드라인 실행은 이미 유니티 프로그램 인스턴스가 실행되고 있으면 에러를 발생 시킵니다.
- 유니티의 빌드 플레이어 세팅 창에, 스토어 키 파일의 경로가 제대로 설정되어 있는지 확인합니다.
- 빌드 중간에 빌드 cmd 콘솔창을 강제로 닫으면, 유니티 프로그램 인스턴스가 좀비 상태가 되어 백그라운드에 남아 있는 경우가 있는데, 이때 좀비 프로그램을 강제 종료해야 다시 빌드할 수 있습니다.

5.2 IOS

- 유티티 빌드 플레이어 셋팅창에 Siging 방법을 Automatic로 하고 TeamID를 반드시 넣어주어야 합니다. Manual signing을 사용할 경우, 자동빌드 시 시간이 많이 걸리므로 사용하지 않는 것이 좋습니다.
(PackageApplication 이란 코드 사인닝 커맨드라인 툴을 애플이 없애 버렸기 때문입니다)

- 빌드하기 전에 IPA가 최종적으로 들어갈 공유 폴더를 미리 마운트 해 놓는 것이 좋습니다.
			